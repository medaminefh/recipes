{"version":3,"sources":["config.js","components/RecipeDetails.js","components/Recipe.js","components/Alert.js","App.js","index.js"],"names":["KEYS","RecipeDetails","ingredients","map","a","key","random","className","text","Math","round","weight","Recipe","recipe","label","image","url","useState","show","setShow","src","alt","href","target","rel","onClick","prev","Alert","alert","floor","App","recipes","setRecipes","query","setQuery","setAlert","getData","axios","get","result","data","more","console","log","hits","onSubmit","e","preventDefault","onChange","value","autoComplete","type","placeholder","r","style","fontSize","letterSpacing","color","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAaA,G,MACD,oCADCA,EAEH,W,iBCSKC,EATO,SAAC,GACrB,OADyC,EAAlBC,YACJC,KAAI,SAACC,GAAD,OACrB,wBAAIC,IAAKC,IAAUC,UAAU,mBAC3B,wBAAIA,UAAU,mBAAmBH,EAAEI,MACnC,wBAAID,UAAU,qBAAd,YAA4CE,KAAKC,MAAMN,EAAEO,cCehDC,EAnBA,SAAC,GAIT,IAAD,IAHJC,OACEA,OAAUC,EAER,EAFQA,MAAOC,EAEf,EAFeA,MAAOC,EAEtB,EAFsBA,IAAKd,EAE3B,EAF2BA,YAE3B,EACoBe,oBAAS,GAD7B,mBACGC,EADH,KACSC,EADT,KAEJ,OACE,yBAAKZ,UAAU,UACb,4BAAKO,GACL,yBAAKM,IAAKL,EAAOM,IAAKP,IACtB,uBAAGQ,KAAMN,EAAKO,OAAO,SAASC,IAAI,uBAAlC,OAGA,4BAAQC,QAAS,kBAAMN,GAAQ,SAACO,GAAD,OAAWA,OAA1C,eACCR,EAAO,kBAAC,EAAD,CAAehB,YAAaA,IAAkB,OCN7CyB,EARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,yBAAKrB,UAAU,SACb,4BAAKqB,KCEEtB,EAAS,kBAAMG,KAAKoB,MAAMpB,KAAKH,SAALG,KAAA,IAAgB,IAAO,MA8D/CqB,MA5Df,WAAe,MAEiBb,mBAAS,IAF1B,mBAENc,EAFM,KAEGC,EAFH,OAGaf,mBAAS,IAHtB,mBAGNgB,EAHM,KAGCC,EAHD,OAIajB,mBAAS,IAJtB,mBAINW,EAJM,KAICO,EAJD,KAMPnB,EAAG,0CAAsCiB,EAAtC,mBAAsDjC,EAAtD,oBAA6EA,GAEhFoC,EAAO,uCAAG,4BAAAhC,EAAA,0DACV6B,EADU,gCAESI,IAAMC,IAAItB,GAFnB,QAENuB,EAFM,QAGAC,KAAKC,MACfN,EAAS,sBAEPI,EAAOC,KAAKC,OACdC,QAAQC,IAAIJ,EAAOC,MACnBN,EAAS,IACTC,EAAS,IACTH,EAAWO,EAAOC,KAAKI,OAVb,sBAaZT,EAAS,wBAbG,2CAAH,qDAyBb,OACE,yBAAK5B,UAAU,OACb,qCACA,0BAAMA,UAAU,cAAcsC,SAZjB,SAACC,GAChBA,EAAEC,iBACFX,MAWKR,EAAQ,kBAAC,EAAD,CAAOA,MAAOA,IAAY,KACnC,2BACEoB,SAXS,SAACF,GAAO,IACfG,EAAUH,EAAEvB,OAAZ0B,MACRf,EAASe,IAUHC,aAAa,MACbC,KAAK,OACLC,YAAY,cACZH,MAAOhB,IAET,2BAAOkB,KAAK,SAASF,MAAM,YAE7B,yBAAK1C,UAAU,WACZwB,IAAYH,EACXG,EAAQ5B,KAAI,SAACkD,GAAD,OAAO,kBAAC,EAAD,CAAQhD,IAAKC,IAAUO,OAAQwC,OAElD,wBAAIC,MAAO,CAAEC,SAAU,OAAQC,cAAe,MAAOC,MAAO,QAA5D,kBCxDVC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.cdbeef18.chunk.js","sourcesContent":["export const KEYS = {\n  APP_KEYS: \"e147d9c809dc4a82c4ca2afff8055151\",\n  APP_ID: \"9ddf302e\",\n};\n","import React from \"react\";\nimport { random } from \"../App\";\nconst RecipeDetails = ({ ingredients }) => {\n  return ingredients.map((a) => (\n    <ul key={random()} className=\"ingredient-list\">\n      <li className=\"ingredient-text\">{a.text}</li>\n      <li className=\"ingredient-weight\">Weight - {Math.round(a.weight)}</li>\n    </ul>\n  ));\n};\n\nexport default RecipeDetails;\n","import React, { useState } from \"react\";\nimport RecipeDetails from \"./RecipeDetails\";\nconst Recipe = ({\n  recipe: {\n    recipe: { label, image, url, ingredients },\n  },\n}) => {\n  const [show, setShow] = useState(false);\n  return (\n    <div className=\"recipe\">\n      <h2>{label}</h2>\n      <img src={image} alt={label} />\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\n        URL\n      </a>\n      <button onClick={() => setShow((prev) => !prev)}>Ingredients</button>\n      {show ? <RecipeDetails ingredients={ingredients} /> : null}\n    </div>\n  );\n};\n\nexport default Recipe;\n","import React from \"react\";\n\nconst Alert = ({ alert }) => {\n  return (\n    <div className=\"alert\">\n      <h2>{alert}</h2>\n    </div>\n  );\n};\n\nexport default Alert;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { KEYS } from \"./config\";\nimport axios from \"axios\";\nimport Recipe from \"./components/Recipe\";\nimport Alert from \"./components/Alert\";\n\nexport const random = () => Math.floor(Math.random() * 100 ** 30);\n\nfunction App() {\n  //state\n  const [recipes, setRecipes] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [alert, setAlert] = useState(\"\");\n\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${KEYS.APP_ID}&app_key=${KEYS.APP_KEYS}`;\n\n  const getData = async () => {\n    if (query) {\n      const result = await axios.get(url);\n      if (!result.data.more) {\n        setAlert(\"food doesn't exist\");\n      }\n      if (result.data.more) {\n        console.log(result.data);\n        setQuery(\"\");\n        setAlert(\"\");\n        setRecipes(result.data.hits);\n      }\n    } else {\n      setAlert(\"Please fill the Form\");\n    }\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getData();\n  };\n  const onChange = (e) => {\n    const { value } = e.target;\n    setQuery(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1> Food</h1>\n      <form className=\"search-form\" onSubmit={onSubmit}>\n        {alert ? <Alert alert={alert} /> : null}\n        <input\n          onChange={onChange}\n          autoComplete=\"off\"\n          type=\"text\"\n          placeholder=\"Search Food\"\n          value={query}\n        />\n        <input type=\"submit\" value=\"search\" />\n      </form>\n      <div className=\"recipes\">\n        {recipes && !alert ? (\n          recipes.map((r) => <Recipe key={random()} recipe={r} />)\n        ) : (\n          <h2 style={{ fontSize: \"50px\", letterSpacing: \"3px\", color: \"red\" }}>\n            4O4 No Data\n          </h2>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}